/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface NewAccount {
  id?: string
  code: string
  name: string
  externalId?: string
  description?: string
  tags?: Array<string>
  metadata?: any
}
export interface AccountValues {
  id: string
  code: string
  name: string
  tags: Array<string>
  externalId?: string
  description?: string
  metadata?: any
}
export interface PaginatedAccounts {
  accounts: Array<AccountValues>
  hasNextPage: boolean
  endCursor?: CursorToken
}
export interface NewJournal {
  id?: string
  name: string
  externalId?: string
  description?: string
}
export interface JournalValues {
  id: string
  name: string
  externalId?: string
  description?: string
}
export interface OutboxServerConfig {
  enabled: boolean
  listenPort?: number
}
export interface CalaLedgerConfig {
  pgCon: string
  maxConnections?: number
  outbox?: OutboxServerConfig
}
export interface CursorToken {
  token: string
}
export interface PaginatedQueryArgs {
  after?: CursorToken
  first: number
}
export class CalaAccounts {
  create(newAccount: NewAccount): Promise<CalaAccount>
  list(query: PaginatedQueryArgs): Promise<PaginatedAccounts>
}
export class CalaAccount {
  id(): string
}
export class CalaJournals {
  create(newJournal: NewJournal): Promise<CalaJournal>
}
export class CalaJournal {
  id(): string
}
export class CalaLedger {
  static connect(config: CalaLedgerConfig): Promise<CalaLedger>
  accounts(): CalaAccounts
  journals(): CalaJournals
  awaitOutboxServer(): Promise<void>
}
