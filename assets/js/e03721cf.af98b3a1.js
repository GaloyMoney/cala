"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[238],{6104:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var c=a(4848),t=a(8453);const r={id:"create-journal-and-accounts",title:"Create a Journal and Accounts",slug:"/docs/create-journal-and-accounts"},s=void 0,i={id:"demo/create-journal-and-accounts",title:"Create a Journal and Accounts",description:"Create different types of accounts (journal, checking, and debit accounts) through the GraphQL API.",source:"@site/docs/demo/create-journal-and-accounts.mdx",sourceDirName:"demo",slug:"/docs/create-journal-and-accounts",permalink:"/docs/create-journal-and-accounts",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"create-journal-and-accounts",title:"Create a Journal and Accounts",slug:"/docs/create-journal-and-accounts"},sidebar:"demoSidebar",previous:{title:"Try Cala",permalink:"/docs"},next:{title:"Create Transaction Templates",permalink:"/docs/tx-template-create"}},o={},l=[{value:"Create a Journal",id:"create-a-journal",level:2},{value:"Variables",id:"variables",level:3},{value:"GraphQL Request Body",id:"graphql-request-body",level:3},{value:"Response",id:"response",level:3},{value:"Create a Checking Account",id:"create-a-checking-account",level:2},{value:"Variables",id:"variables-1",level:3},{value:"GraphQL body",id:"graphql-body",level:3},{value:"Response",id:"response-1",level:3},{value:"Create a Debit Account",id:"create-a-debit-account",level:2},{value:"Variables",id:"variables-2",level:3},{value:"GraphQL Request Body",id:"graphql-request-body-1",level:3},{value:"Response",id:"response-2",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"Create different types of accounts (journal, checking, and debit accounts) through the GraphQL API."}),"\n",(0,c.jsx)(n.h2,{id:"create-a-journal",children:"Create a Journal"}),"\n",(0,c.jsx)(n.p,{children:'Initiate the creation of a journal, specifically a "General Ledger," which is fundamental in accounting for keeping track of all the financial transactions of a company.'}),"\n",(0,c.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,c.jsx)(n.p,{children:"The GraphQL mutation request input contains the unique ID and the name of the journal. The system creates a journal entity with these details."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "input": {\n    "journalId": "bcc24f47-990c-457d-88cb-76332450ac77",\n    "name": "General Ledger"\n  }\n}\n'})}),"\n",(0,c.jsx)(n.h3,{id:"graphql-request-body",children:"GraphQL Request Body"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-graphql",children:"mutation journalCreate($input: JournalCreateInput!) {\n  journalCreate(input: $input) {\n    journal {\n      journalId\n      name\n    }\n  }\n}\n"})}),"\n",(0,c.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,c.jsx)(n.p,{children:"The system returns the details of the newly created journal, including its ID and name, confirming the successful creation."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "journalCreate": {\n      "journal": {\n        "journalId": "bcc24f47-990c-457d-88cb-76332450ac77",\n        "name": "General Ledger"\n      }\n    }\n  }\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"create-a-checking-account",children:"Create a Checking Account"}),"\n",(0,c.jsxs)(n.p,{children:["Next create a checking account named ",(0,c.jsx)(n.code,{children:"Alice - Checking"}),". Checking accounts are typically used for day-to-day banking transactions."]}),"\n",(0,c.jsxs)(n.p,{children:["The mutation request includes details like account ID, name, and other attributes like ",(0,c.jsx)(n.code,{children:"code"})," and ",(0,c.jsx)(n.code,{children:"normalBalanceType"}),". ",(0,c.jsx)("br",{}),"\nThe ",(0,c.jsx)(n.code,{children:"normalBalanceType"})," indicates whether the account is a debit or credit type, essential for correct accounting practices."]}),"\n",(0,c.jsx)(n.h3,{id:"variables-1",children:"Variables"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "input": {\n    "accountId": "3a7d421b-7f5a-43ca-ba6f-5f3e6ee67237",\n    "name": "Alice - Checking",\n    "code": "ALICE.CHECKING-3a7d421b-7f5a-43ca-ba6f-5f3e6ee67237",\n    "normalBalanceType": "CREDIT"\n  }\n}\n'})}),"\n",(0,c.jsx)(n.h3,{id:"graphql-body",children:"GraphQL body"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-graphql",children:"mutation accountCreate($input: AccountCreateInput!) {\n  accountCreate(input: $input) {\n    account {\n      accountId\n      name\n    }\n  }\n}\n"})}),"\n",(0,c.jsx)(n.h3,{id:"response-1",children:"Response"}),"\n",(0,c.jsx)(n.p,{children:"The response confirms the creation of the checking account with the specified details, ensuring the account is ready for transactional activities."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "accountCreate": {\n      "account": {\n        "accountId": "3a7d421b-7f5a-43ca-ba6f-5f3e6ee67237",\n        "name": "Alice - Checking"\n      }\n    }\n  }\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"create-a-debit-account",children:"Create a Debit Account"}),"\n",(0,c.jsxs)(n.p,{children:["Create a debit account labeled ",(0,c.jsx)(n.code,{children:"Assets"}),". Debit accounts are crucial for tracking resources owned by a business."]}),"\n",(0,c.jsxs)(n.p,{children:["Similar to the previous account creation, the mutation includes unique identifiers and account-specific information like the ",(0,c.jsx)(n.code,{children:"normalBalanceType"}),", which in this case is ",(0,c.jsx)(n.code,{children:"DEBIT"}),", indicating the nature of transactions expected."]}),"\n",(0,c.jsx)(n.h3,{id:"variables-2",children:"Variables"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'{\n  "input": {\n    "accountId": "2e40175d-35c2-4b6f-9c01-cc2309934d25",\n    "name": "Assets",\n    "code": "ASSET-2e40175d-35c2-4b6f-9c01-cc2309934d25",\n    "normalBalanceType": "DEBIT"\n  }\n}\n'})}),"\n",(0,c.jsx)(n.h3,{id:"graphql-request-body-1",children:"GraphQL Request Body"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-graphql",children:"mutation accountCreate($input: AccountCreateInput!) {\n  accountCreate(input: $input) {\n    account {\n      accountId\n      name\n    }\n  }\n}\n"})}),"\n",(0,c.jsx)(n.h3,{id:"response-2",children:"Response"}),"\n",(0,c.jsx)(n.p,{children:"The response shows the successful creation of the debit account, confirming that it's set up to track asset-related transactions."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "accountCreate": {\n      "account": {\n        "accountId": "2e40175d-35c2-4b6f-9c01-cc2309934d25",\n        "name": "Assets"\n      }\n    }\n  }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);